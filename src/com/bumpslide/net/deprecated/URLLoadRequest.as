/** * This code is part of the Bumpslide Library by David Knape * http://bumpslide.com/ *  * Copyright (c) 2006, 2007, 2008 by Bumpslide, Inc. *  * Released under the open-source MIT license. * http://www.opensource.org/licenses/mit-license.php * see LICENSE.txt for full license terms */ package com.bumpslide.net.deprecated {    import flash.net.URLLoader;    import flash.net.URLRequest;        /**     * Encapsulates a UrlLoader along with data and callback info for use with URLLoaderQueue     *      * @author David Knape     */    public class URLLoadRequest extends Object  {    	    	private var _urlLoader:URLLoader;    	private var _urlRequest:URLRequest;        private var _callback:Function;        private var _data:*;        private var _id:String;        		public var httpStatus:int;		function URLLoadRequest( url_loader:URLLoader, url_request:URLRequest, callback_func:Function=null, misc_data:*=null, unique_id:String=null ) {                        _urlLoader = url_loader;            _urlRequest = url_request;            _callback = callback_func;            _data = misc_data;                        // use URL as default id string            _id = (unique_id==null) ? urlRequest.url.split('/').pop() : unique_id;        }                // read-only access to properties...        //-------------------------------------                public function get urlLoader () : URLLoader { return _urlLoader; }         public function get urlRequest () : URLRequest { return _urlRequest; }         public function get callback () : Function { return _callback; }         public function get data () : * { return _data; }         public function get id () : String { return _id; }         public function get url () : String { return _urlRequest.url; }                public function load() : void {            urlLoader.load( urlRequest );        }                public function cancel() : void {            try { urlLoader.close(); } catch (e:Error) {}        }                public function get percentLoaded () : Number {            return urlLoader.bytesLoaded / urlLoader.bytesTotal;        }                public function toString() : String {            return '[URLLoadRequest: '+id+']';        }                                    }}