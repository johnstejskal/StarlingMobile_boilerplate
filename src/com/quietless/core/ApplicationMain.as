package com.quietless.core {		import flash.text.TextField;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;		import classes.quietless.events.CustomEvent;	import classes.quietless.utils.DynamicBitmap;	import flash.display.Sprite;		public class ApplicationMain extends MovieClip	{			public var box:Sprite; 		private var _dbmp:DynamicBitmap;	// _directory path is relative to the _uploadscript directory // 		private var _uploadScript:String = 'uploads/upload.php';					private var _target; // anykind of display object on the stage //		private var _filename = 'myBitmapSnapshot.jpg';			public function ApplicationMain ()		{			//snapshot_btn.addEventListener(MouseEvent.CLICK, takeSnapshot);			//upload_btn.addEventListener(MouseEvent.CLICK, uploadSnapshot);		}				private function takeSnapshot():void		{			/* dynamic creation of thumb -> create a rect 25 * 25 with idea colour and description inside it */						box = new Sprite();			box.graphics.lineStyle(1,0xffccff);			box.graphics.beginFill(0xffccff);			box.graphics.drawRect(0,0,100,100);			box.graphics.endFill();						addChild(box);			_target = box; // some display object on the stage //												_dbmp = new DynamicBitmap(_target, _filename);		// optional listeners to help debug any errors //				_dbmp.addEventListener('onLoadSuccess', onSuccess);			_dbmp.addEventListener('onLoadFailure', onFailure);			_dbmp.addEventListener('onSecurityError', onFailure);			_dbmp.addEventListener('ImageConversionFailure', onFailure);			removeChild(box);		}				private function uploadSnapshot():void		{		    _dbmp.upload(_uploadScript);					}        //-------------------------------------------------------------------        		private function onSuccess(evt:CustomEvent):void		{		    output_txt.text = evt.params.data;			trace('URLRequest headers sucessfully sent \n'+evt.params.data);		}				private function onFailure(evt:CustomEvent):void		{			trace(evt.params);		}			}	}